<<<<<<< HEAD
git clone https://github.com/pjjongenelen/DE_course.git
git pull origin tc_kuber
=======
kubectl create -f namespace.yaml
kubectl get namespaces
kubectl describe namespaces fifaxgb

helm repo add stable https://kubernetes-charts.storage.googleapis.com/
>>>>>>> 7c4b4c45b2ac34df0ce9b8264a0830776053f6f3

kubectl create -f namespace.yaml
kubectl get namespaces
kubectl describe namespaces fifaxgb


helm repo add stable https://kubernetes-charts.storage.googleapis.com/
helm repo update
helm install nfs-server stable/nfs-server-provisioner --set persistence.enabled=true,persistence.size=100Gi --namespace=fifaxgb


kubectl get pods --namespace=fifaxgb
kubectl get services --namespace=fifaxgb
kubectl get pv --namespace=fifaxgb

[DATABASE]

kubectl create -f nfs-pvc-traindb.yaml
kubectl get pvc --namespace=fifaxgb

kubectl create -f training-db.deployment.yaml
kubectl get pods --namespace=fifaxgb
kubectl describe pod [put here name of pods] --namespace=fifaxgb

laatste stap is erg belangrijk! de describe moet blijkbaar bij elke deployment step


kubectl create -f training-db.service.yaml
kubectl get services --namespace=fifaxgb
kubectl describe services training-db-service --namespace=fifaxgb

nu komt er een external IP als het goed is
deze external IP kan je gebruiken in Insomnia

[TRAIN AND PREDICTION]
kubectl create -f nfs-pvc-modelrepo.yaml
kubectl create -f training-cp.deployment.yaml
kubectl create -f training-cp.service.yaml
kubectl create -f prediction-cp.deployment.yaml
kubectl create -f prediction-cp.service.yaml

kubectl get pods --namespace=fifaxgb    (make sure all are running)
kubectl get services --namespace=fifaxgb (get external IPs)

[TESTEN IN INSOMNIA]
http://EXTERNAL_IP:5002/training-cp/fifa